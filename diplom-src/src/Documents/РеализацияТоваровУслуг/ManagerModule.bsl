
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
		
		Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
			
			КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
			КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
			КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
			КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
			
			Возврат КомандаСоздатьНаОсновании;
			
		КонецЕсли;
		
		Возврат Неопределено;
		
	КонецФункции
	
	//НачалоДоработки. Контеева, 24.05.24. Для создания в док-те печатной формы акта об оказанных услугах
	
	// Выводит на форму команду печати акта
	//
	//Параметры:
	//   КомандыПечати - ТаблицаЗначений.
	Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Документ.РеализацияТоваровУслуг";
		КомандаПечати.Идентификатор = "АктВыполненныхУслуг";
		КомандаПечати.Представление = НСтр("ru = 'Печать акта'");
		КомандаПечати.Порядок = 5;
		
	КонецПроцедуры
	//КонецДоработки
	
	#КонецОбласти
	//НачалоДоработки. Контеева, 24.05.24. Для создания в док-те печатной формы акта об оказанных услугах
	
	#Область СлужебныеПроцедурыИФункции
	// Формирует табличный документ печатной формы "Акт выполненных услуг"
	//
	// Параметры:
	//  МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать;
	////  ПараметрыПечати - Структура - дополнительные настройки печати;
	//  ОбъектыПечати - СписокЗначений -значение - ссылка на объект;
	//                                            представление - имя области, в которой был выведен объект (выходной параметр);
	Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктВыполненныхУслуг";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		
		ПервыйДокумент = Истина;
		
		Пока ДанныеДокументов.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				// Все документы нужно выводить на разных страницах.
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			
		КонецЦикла;	
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	Процедура ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьЗаголовокАкта = Макет.ПолучитьОбласть("ЗаголовокАкта");
		ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ПредставлениеПолучателя", ДанныеДокументов.Контрагент);
		
		ШаблонЗаголовка = "Акт выполненных услуг %1 от %2";
		ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		
		ОбластьЗаголовокАкта.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокАкта);
		
		ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
		
	КонецПроцедуры
	
	Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ПредставлениеПоставщика", ДанныеДокументов.Организация);
		ДанныеПечати.Вставить("ПредставлениеПокупателя", ДанныеДокументов.Контрагент);
		ДанныеПечати.Вставить("Основание", ДанныеДокументов.Договор);
		
		ОбластьПоставщик.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПокупатель);
		
	КонецПроцедуры     
	
	
	Процедура ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуги);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Всего", ДанныеДокументов.СуммаДокумента);
		
		ПрописьСуммы = ЧислоПрописью(ДанныеПечати.Всего,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		ДанныеПечати.Вставить("СуммаПрописью", ПрописьСуммы);
		
		ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьИтого);  
		ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);  
		
	КонецПроцедуры
	
	Процедура ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет)
		
		ОбластьПодвалПодписиИсполнителей = Макет.ПолучитьОбласть("ПодвалПодписиИсполнителей");
		
		ТабличныйДокумент.Вывести(ОбластьПодвалПодписиИсполнителей);  
		
		ОбластьПодвалПодписиРуководства = Макет.ПолучитьОбласть("ПодвалПодписиРуководства");
		
		ТабличныйДокумент.Вывести(ОбластьПодвалПодписиРуководства);  
		
	КонецПроцедуры
	
	Функция ПолучитьДанныеДокументов(МассивОбъектов)
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Номер,
		|	РеализацияТоваровУслуг.Дата,
		|	РеализацияТоваровУслуг.Организация,
		|	РеализацияТоваровУслуг.Контрагент,
		|	РеализацияТоваровУслуг.Договор,
		|	РеализацияТоваровУслуг.СуммаДокумента,
		|	РеализацияТоваровУслуг.Ответственный,
		|	РеализацияТоваровУслуг.Услуги.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		Количество,
		|		Цена,
		|		Сумма)
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В (&МассивОбъектов)";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		РезультатЗапроса = Запрос.Выполнить();
		
		Возврат РезультатЗапроса.Выбрать();
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
		
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		//КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	КонецФункции 
	
	Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктВыполненныхУслуг");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент = ПечатьАкта(МассивОбъектов, ОбъектыПечати);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт выполненных услуг'");
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт";
		КонецЕсли;
		
	КонецПроцедуры      
	
	#КонецОбласти
	//КонецДоработки
	
#КонецЕсли