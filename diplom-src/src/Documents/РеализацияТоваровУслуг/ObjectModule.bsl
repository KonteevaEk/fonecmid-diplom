
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим) 
	
	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
   
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ЗаказПокупателя.Контрагент КАК Контрагент,
	|	ЗаказПокупателя.Договор КАК Договор,
	|	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказПокупателя.Товары.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Товары,
	|	ЗаказПокупателя.Услуги.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Услуги
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//НачалоДоработки. Контеева, 22.05.24. Автозаполнение данными из договора обслуживания

&НаСервере
Процедура ВыполнитьАвтозаполнение() Экспорт
	
	КонстантаАбонПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить(); 
	Если НЕ ЗначениеЗаполнено(КонстантаАбонПлата) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заведена номенклатура Абонентская плата";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	КонстантаРаботы = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если НЕ ЗначениеЗаполнено(КонстантаРаботы) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заведена номенклатура Работы специалиста";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Услуги.Очистить();   
	
	ДоговорСсылка = Договор;  
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорСсылка, "ВКМ_АбонентскаяПлата, ВКМ_НачалоДействия, ВКМ_КонецДействия");
	АбонентскаяПлата = ЗначенияРеквизитов.ВКМ_АбонентскаяПлата;
	НачалоДоговора = ЗначенияРеквизитов.ВКМ_НачалоДействия;
	КонецДоговора = ЗначенияРеквизитов.ВКМ_КонецДействия;
	
	Если Дата > КонецДня(КонецДоговора) ИЛИ Дата < НачалоДня(НачалоДоговора) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Договор не действителен на дату документа";
			Сообщение.Сообщить();
			Отказ = Истина; 
	КонецЕсли;

	Если АбонентскаяПлата <> 0 Тогда  
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = КонстантаАбонПлата; 
				НоваяСтрока.Количество = 1; 

		НоваяСтрока.Цена = АбонентскаяПлата; 
				НоваяСтрока.Сумма = АбонентскаяПлата; 

		
	КонецЕсли;  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботы.ВКМ_Клиент КАК Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботы.ВКМ_Договор КАК Договор,
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.ВКМ_КоличествоЧасов) КАК КоличествоЧасов,
	|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.ВКМ_СуммаКОплате) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы КАК ВКМ_ВыполненныеКлиентуРаботы
	|ГДЕ
	|	ВКМ_ВыполненныеКлиентуРаботы.ВКМ_Клиент = &Клиент
	|	И ВКМ_ВыполненныеКлиентуРаботы.Период >= &ДатаНачала
	|	И ВКМ_ВыполненныеКлиентуРаботы.Период <= &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ВыполненныеКлиентуРаботы.ВКМ_Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботы.ВКМ_Договор";
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Клиент", Контрагент);    
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = КонстантаРаботы; 
		НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплате; 
		НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасов;
	КонецЦикла;
	
	//Записать();
	
КонецПроцедуры

//КонецДоработки

#КонецОбласти

#КонецЕсли
